{"ast":null,"code":"var _jsxFileName = \"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Button, Flex, useModal } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { useBuy } from 'hooks/usePresale';\nimport BuyModal from './BuyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`;\n\nconst BuyAction = ({\n  busdBalance,\n  tokensUnclaimed,\n  tokenBalance,\n  tokensLeft\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    onBuy\n  } = useBuy();\n  const [onPresentBuy] = useModal( /*#__PURE__*/_jsxDEV(BuyModal, {\n    max: busdBalance,\n    onConfirm: onBuy,\n    tokenName: \"BUSD\",\n    tokensUnclaimed: tokensUnclaimed,\n    tokenBalance: tokenBalance,\n    tokensLeft: tokensLeft\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n\n  const renderStakingButtons = () => {\n    // tochange\n    return /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      fullWidth: true,\n      onClick: onPresentBuy,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    children: \"Presale has ended. You can buy our tokens from PCS!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BuyAction, \"1XrbuL4KHrxEWFV3B7QSeu5Q8do=\", false, function () {\n  return [useI18n, useBuy, useModal];\n});\n\n_c = BuyAction;\nexport default BuyAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAction\");","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyAction.tsx"],"names":["React","styled","Button","Flex","useModal","useI18n","useBuy","BuyModal","IconButtonWrapper","div","BuyAction","busdBalance","tokensUnclaimed","tokenBalance","tokensLeft","TranslateString","onBuy","onPresentBuy","renderStakingButtons"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAgEC,QAAhE,QAAgF,yBAAhF;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAiB,GAAGP,MAAM,CAACQ,GAAI;AACrC;AACA;AACA;AACA;AACA,CALA;;AAgBA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,eAAf;AAAgCC,EAAAA,YAAhC;AAA8CC,EAAAA;AAA9C,CAAD,KAAgE;AAAA;;AACxG,QAAMC,eAAe,GAAGV,OAAO,EAA/B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYV,MAAM,EAAxB;AAEA,QAAM,CAACW,YAAD,IAAiBb,QAAQ,eAC3B,QAAC,QAAD;AAAU,IAAA,GAAG,EAAEO,WAAf;AAA4B,IAAA,SAAS,EAAEK,KAAvC;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAA+D,IAAA,eAAe,EAAEJ,eAAhF;AAAiG,IAAA,YAAY,EAAEC,YAA/G;AAA6H,IAAA,UAAU,EAAEC;AAAzI;AAAA;AAAA;AAAA;AAAA,UAD2B,CAA/B;;AAIA,QAAMI,oBAAoB,GAAG,MAAM;AAC/B;AACA,wBAAO,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,MAA1B;AAA2B,MAAA,OAAO,EAAED,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAqC,IAAA,UAAU,EAAC,QAAhD;AAAyD,IAAA,aAAa,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApBD;;GAAMP,S;UACsBL,O,EACNC,M,EAEKF,Q;;;KAJrBM,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useBuy } from 'hooks/usePresale'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport BuyModal from './BuyModal'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\n\r\ninterface BuyActionProps {\r\n    busdBalance?: BigNumber\r\n    tokensUnclaimed?: BigNumber\r\n    tokenBalance?: BigNumber\r\n    tokensLeft?: BigNumber\r\n}\r\n\r\n\r\nconst BuyAction: React.FC<BuyActionProps> = ({ busdBalance, tokensUnclaimed, tokenBalance, tokensLeft }) => {\r\n    const TranslateString = useI18n()\r\n    const { onBuy } = useBuy()\r\n\r\n    const [onPresentBuy] = useModal(\r\n        <BuyModal max={busdBalance} onConfirm={onBuy} tokenName=\"BUSD\" tokensUnclaimed={tokensUnclaimed} tokenBalance={tokenBalance} tokensLeft={tokensLeft} />\r\n    )\r\n\r\n    const renderStakingButtons = () => {\r\n        // tochange\r\n        return <Button disabled fullWidth onClick={onPresentBuy}>Buy</Button>\r\n    }\r\n\r\n    return (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" flexDirection=\"column\">\r\n            {/* {renderStakingButtons()} */}\r\n            Presale has ended. You can buy our tokens from PCS!\r\n            {/* to change */}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default BuyAction"]},"metadata":{},"sourceType":"module"}