{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport PresaleConfig from 'config/constants/presale';\nimport fetchTokensLeft from './fetchTokensLeft';\nimport { fetchUserPresaleAllowances, fetchUserTokensUnclaimed, fetchUserPresaleBalance } from './fetchUserPresale';\nconst initialState = {\n  data: { ...PresaleConfig\n  }\n};\nexport const PresaleSlice = createSlice({\n  name: 'Presale',\n  initialState,\n  reducers: {\n    setTokensLeftData: (state, action) => {\n      state.data = { ...state.data,\n        tokensLeft: action.payload\n      };\n    },\n    setUserTokensUnclaimedData: (state, action) => {\n      state.data = { ...state.data,\n        tokensUnclaimed: action.payload\n      };\n    },\n    setUserPresaleAllowance: (state, action) => {\n      state.data = { ...state.data,\n        userAllowance: action.payload\n      };\n    },\n    setUserBusdBalance: (state, action) => {\n      state.data = { ...state.data,\n        busdBalance: action.payload\n      };\n    },\n    setUserCakeBalance: (state, action) => {\n      state.data = { ...state.data,\n        cakeBalance: action.payload\n      };\n    }\n  }\n}); // Actions\n\nexport const {\n  setTokensLeftData,\n  setUserPresaleAllowance,\n  setUserTokensUnclaimedData,\n  setUserBusdBalance,\n  setUserCakeBalance\n} = PresaleSlice.actions; // Thunks\n\nexport const fetchTokensLeftDataAsync = () => async dispatch => {\n  const data = await fetchTokensLeft();\n  dispatch(setTokensLeftData(data));\n};\nexport const fetchUserPresaleAllowanceDataAsync = account => async dispatch => {\n  const data = await fetchUserPresaleAllowances(account);\n  dispatch(setUserPresaleAllowance(data));\n};\nexport const fetchUserBalanceDataAsync = account => async dispatch => {\n  const data = await fetchUserPresaleBalance(account);\n  dispatch(setUserBusdBalance(data[0]));\n  dispatch(setUserCakeBalance(data[1]));\n};\nexport const fetchUserTokensUnclaimedDataAsync = account => async dispatch => {\n  const data = await fetchUserTokensUnclaimed(account);\n  dispatch(setUserTokensUnclaimedData(data));\n};\nexport default PresaleSlice.reducer;","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/index.ts"],"names":["createSlice","PresaleConfig","fetchTokensLeft","fetchUserPresaleAllowances","fetchUserTokensUnclaimed","fetchUserPresaleBalance","initialState","data","PresaleSlice","name","reducers","setTokensLeftData","state","action","tokensLeft","payload","setUserTokensUnclaimedData","tokensUnclaimed","setUserPresaleAllowance","userAllowance","setUserBusdBalance","busdBalance","setUserCakeBalance","cakeBalance","actions","fetchTokensLeftDataAsync","dispatch","fetchUserPresaleAllowanceDataAsync","account","fetchUserBalanceDataAsync","fetchUserTokensUnclaimedDataAsync","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport PresaleConfig from 'config/constants/presale'\r\nimport { PresaleState, Presale } from '../types'\r\nimport fetchTokensLeft from './fetchTokensLeft'\r\nimport { fetchUserPresaleAllowances, fetchUserTokensUnclaimed, fetchUserPresaleBalance } from './fetchUserPresale'\r\n\r\nconst initialState: PresaleState = { data: { ...PresaleConfig } }\r\n\r\nexport const PresaleSlice = createSlice({\r\n  name: 'Presale',\r\n  initialState,\r\n  reducers: {\r\n    setTokensLeftData: (state, action) => {\r\n      state.data = {\r\n        ...state.data,\r\n        tokensLeft: action.payload,\r\n      }\r\n    },\r\n    setUserTokensUnclaimedData: (state, action) => {\r\n      state.data = {\r\n        ...state.data,\r\n        tokensUnclaimed: action.payload,\r\n      }\r\n    },\r\n    setUserPresaleAllowance: (state, action) => {\r\n      state.data = {\r\n        ...state.data,\r\n        userAllowance: action.payload,\r\n      }\r\n    },\r\n    setUserBusdBalance: (state, action) => {\r\n      state.data = {\r\n        ...state.data,\r\n        busdBalance: action.payload,\r\n      }\r\n    },\r\n    setUserCakeBalance: (state, action) => {\r\n      state.data = {\r\n        ...state.data,\r\n        cakeBalance: action.payload,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setTokensLeftData, setUserPresaleAllowance, setUserTokensUnclaimedData, setUserBusdBalance, setUserCakeBalance } = PresaleSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTokensLeftDataAsync = () => async (dispatch) => {\r\n  const data = await fetchTokensLeft()\r\n\r\n  dispatch(setTokensLeftData(data))\r\n}\r\n\r\nexport const fetchUserPresaleAllowanceDataAsync = (account) => async (dispatch) => {\r\n  const data = await fetchUserPresaleAllowances(account)\r\n\r\n  dispatch(setUserPresaleAllowance(data))\r\n}\r\n\r\nexport const fetchUserBalanceDataAsync = (account) => async (dispatch) => {\r\n  const data = await fetchUserPresaleBalance(account)\r\n  dispatch(setUserBusdBalance(data[0]))\r\n  dispatch(setUserCakeBalance(data[1]))\r\n}\r\n\r\nexport const fetchUserTokensUnclaimedDataAsync = (account) => async (dispatch) => {\r\n  const data = await fetchUserTokensUnclaimed(account)\r\n\r\n  dispatch(setUserTokensUnclaimedData(data))\r\n}\r\n\r\nexport default PresaleSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}