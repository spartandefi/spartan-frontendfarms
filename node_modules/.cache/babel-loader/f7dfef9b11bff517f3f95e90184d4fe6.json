{"ast":null,"code":"var _jsxFileName = \"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/AddTokenCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, Heading, Text, CopyIcon, Button, Link } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardImage = styled.img`\n  width: 60px;\n  height: auto;\n  margin-right: 20px;\n`;\nconst TokenWrapper = styled.div`\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    text-align: center;\n    justify-content: center;\n  }\n`;\n_c = TokenWrapper;\nconst TokenAddressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = TokenAddressWrapper;\nconst TokenAccountWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 5px;\n  cursor: pointer;\n  padding: 5px;\n`;\n_c3 = TokenAccountWrapper;\nconst TokenAccount = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 40%;\n  color: #0080FF;\n  margin-left: 10px;\n\n  @media only screen and (min-width: 375px) {\n    width: 50%;\n  }\n\n  @media only screen and (min-width: 425px) {\n    width: 60%;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n\n  @media only screen and (min-width: 1024px) {\n    width: 100%;\n  }\n`;\n_c4 = TokenAccount;\nconst StyleButton = styled(Text).attrs({\n  role: 'button'\n})`\n  position: relative;\n  display: flex;\n  line-height: unset !important;\n`;\n_c5 = StyleButton;\nconst Tooltip = styled.div`\n  display: ${({\n  isTooltipDisplayed\n}) => isTooltipDisplayed ? 'block' : 'none'};\n  position: absolute;\n  bottom: -29px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  background-color: white;\n  color: black;\n  border-radius: 16px;\n  opacity: 0.7;\n  padding: 5px;\n  width: 45%;\n\n  @media only screen and (min-width: 375px) {\n    width: 55%;\n  }\n\n  @media only screen and (min-width: 425px) {\n    width: 65%;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n\n  @media only screen and (min-width: 1024px) {\n    width: 60%;\n  }\n`;\n_c6 = Tooltip;\nconst ActionsButtonWrapper = styled.div`\n  margin-top: 20px;\n  text-align: center;\n\n  button {\n    width: 100%;\n  }\n\n  p {\n    margin-top: 10px;\n  }\n\n  a {\n    display: inline-block;\n    width: 100%;\n\n    :hover {\n      text-decoration: none;\n    }\n  }\n`;\n_c7 = ActionsButtonWrapper;\nconst BuyWrapper = styled.div`\n  margin-top: 20px;\n`;\n_c8 = BuyWrapper;\nconst AddTokenIcon = styled.img`\n  width: 108px;\n  height: auto;\n  margin-bottom: 11px;\n`;\n_c9 = AddTokenIcon;\nconst ButtonIcon = styled.img`\n  width: 34px;\n  height: 34px;\n`;\n_c10 = ButtonIcon;\n\nconst AddTokenCard = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const tokenAddress = getCakeAddress();\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\n  const [addTokenDisabled, setAddTokenDisabled] = useState(false);\n  const handleAddToken = useCallback(async () => {\n    const windowAsAny = window;\n\n    if (typeof windowAsAny.ethereum === 'undefined' && !windowAsAny.ethereum.isMetaMask) {\n      console.error('MetaMask is not installed!');\n    }\n\n    setAddTokenDisabled(true);\n    const tokenSymbol = 'GOB';\n    const tokenDecimals = 18;\n    const tokenImage = `${process.env.REACT_APP_BASE_URL}/images/egg/9.png`;\n\n    try {\n      const wasAdded = await windowAsAny.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: {\n            address: tokenAddress,\n            symbol: tokenSymbol,\n            decimals: tokenDecimals,\n            image: tokenImage\n          }\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setAddTokenDisabled(false);\n    }\n  }, [tokenAddress]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: \"24px\",\n        style: {\n          textAlign: 'center'\n        },\n        children: TranslateString(10015, 'Add GOB')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(AddTokenIcon, {\n          src: \"/images/egg/2.png\",\n          alt: \"add logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenWrapper, {\n        children: /*#__PURE__*/_jsxDEV(TokenAddressWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: TranslateString(10016, 'Token Address')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TokenAccountWrapper, {\n            children: /*#__PURE__*/_jsxDEV(StyleButton, {\n              small: true,\n              bold: true,\n              onClick: () => {\n                if (navigator.clipboard) {\n                  navigator.clipboard.writeText(tokenAddress);\n                  setIsTooltipDisplayed(true);\n                  setTimeout(() => {\n                    setIsTooltipDisplayed(false);\n                  }, 1000);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(CopyIcon, {\n                width: \"18px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TokenAccount, {\n                children: tokenAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                isTooltipDisplayed: isTooltipDisplayed,\n                children: \"Copied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionsButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            disabled: addTokenDisabled,\n            onClick: handleAddToken,\n            children: [TranslateString(10017, 'Add GOB to'), \"\\xA0\", /*#__PURE__*/_jsxDEV(ButtonIcon, {\n              src: \"/images/metamask.png\",\n              alt: \"metamask logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuyWrapper, {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            external: true,\n            href: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${tokenAddress}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: [TranslateString(10018, 'Buy GOB'), \"\\xA0\", /*#__PURE__*/_jsxDEV(ButtonIcon, {\n                src: \"/images/pancake.png\",\n                alt: \"pancake logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              paddingTop: '5px'\n            },\n            children: \" Slippage must be above 6% !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTokenCard, \"E1P3TxTr8ykNrheJ+TUP9J92jOw=\", false, function () {\n  return [useI18n];\n});\n\n_c11 = AddTokenCard;\nexport default AddTokenCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"TokenWrapper\");\n$RefreshReg$(_c2, \"TokenAddressWrapper\");\n$RefreshReg$(_c3, \"TokenAccountWrapper\");\n$RefreshReg$(_c4, \"TokenAccount\");\n$RefreshReg$(_c5, \"StyleButton\");\n$RefreshReg$(_c6, \"Tooltip\");\n$RefreshReg$(_c7, \"ActionsButtonWrapper\");\n$RefreshReg$(_c8, \"BuyWrapper\");\n$RefreshReg$(_c9, \"AddTokenIcon\");\n$RefreshReg$(_c10, \"ButtonIcon\");\n$RefreshReg$(_c11, \"AddTokenCard\");","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/AddTokenCard.tsx"],"names":["React","useState","useCallback","styled","Card","CardBody","Heading","Text","CopyIcon","Button","Link","useI18n","getCakeAddress","CardImage","img","TokenWrapper","div","TokenAddressWrapper","TokenAccountWrapper","TokenAccount","StyleButton","attrs","role","Tooltip","isTooltipDisplayed","ActionsButtonWrapper","BuyWrapper","AddTokenIcon","ButtonIcon","AddTokenCard","TranslateString","tokenAddress","setIsTooltipDisplayed","addTokenDisabled","setAddTokenDisabled","handleAddToken","windowAsAny","window","ethereum","isMetaMask","console","error","tokenSymbol","tokenDecimals","tokenImage","process","env","REACT_APP_BASE_URL","wasAdded","request","method","params","type","options","address","symbol","decimals","image","textAlign","navigator","clipboard","writeText","setTimeout","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAA4CC,IAA5C,EAAwDC,QAAxD,EAAkEC,MAAlE,EAA0EC,IAA1E,QAAsF,yBAAtF;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAGA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC7B;AACA;AACA;AACA,CAJA;AAMA,MAAMC,YAAY,GAAGZ,MAAM,CAACa,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,Y;AASN,MAAME,mBAAmB,GAAGd,MAAM,CAACa,GAAI;AACvC;AACA;AACA,CAHA;MAAMC,mB;AAKN,MAAMC,mBAAmB,GAAGf,MAAM,CAACa,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,mB;AAQN,MAAMC,YAAY,GAAGhB,MAAM,CAACa,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;MAAMG,Y;AA2BN,MAAMC,WAAW,GAAGjB,MAAM,CAACI,IAAD,CAAN,CAAac,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAuC;AAC3D;AACA;AACA;AACA,CAJA;MAAMF,W;AAMN,MAAMG,OAAO,GAAGpB,MAAM,CAACa,GAAqC;AAC5D,aAAa,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAA6BA,kBAAkB,GAAG,OAAH,GAAa,MAAQ;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;MAAMD,O;AA+BN,MAAME,oBAAoB,GAAGtB,MAAM,CAACa,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMS,oB;AAsBN,MAAMC,UAAU,GAAGvB,MAAM,CAACa,GAAI;AAC9B;AACA,CAFA;MAAMU,U;AAIN,MAAMC,YAAY,GAAGxB,MAAM,CAACW,GAAI;AAChC;AACA;AACA;AACA,CAJA;MAAMa,Y;AAMN,MAAMC,UAAU,GAAGzB,MAAM,CAACW,GAAI;AAC9B;AACA;AACA,CAHA;OAAMc,U;;AAKN,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,eAAe,GAAGnB,OAAO,EAA/B;AACA,QAAMoB,YAAY,GAAGnB,cAAc,EAAnC;AACA,QAAM,CAACY,kBAAD,EAAqBQ,qBAArB,IAA8C/B,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACgC,gBAAD,EAAmBC,mBAAnB,IAA0CjC,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAMkC,cAAc,GAAGjC,WAAW,CAAC,YAAY;AAC7C,UAAMkC,WAAW,GAAGC,MAApB;;AACA,QAAI,OAAOD,WAAW,CAACE,QAAnB,KAAgC,WAAhC,IAA+C,CAACF,WAAW,CAACE,QAAZ,CAAqBC,UAAzE,EAAqF;AACnFC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd;AACD;;AAEDP,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEA,UAAMQ,WAAW,GAAG,KAApB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,UAAU,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,mBAArD;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACE,QAAZ,CAAqBW,OAArB,CAA6B;AAClDC,QAAAA,MAAM,EAAE,mBAD0C;AAElDC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,OAAO,EAAE;AACPC,YAAAA,OAAO,EAAEvB,YADF;AAEPwB,YAAAA,MAAM,EAAEb,WAFD;AAGPc,YAAAA,QAAQ,EAAEb,aAHH;AAIPc,YAAAA,KAAK,EAAEb;AAJA;AAFH;AAF0C,OAA7B,CAAvB;AAYD,KAbD,CAaE,OAAOH,KAAP,EAAc;AACdD,MAAAA,OAAO,CAACC,KAAR,CAAcA,KAAd;AACD,KAfD,SAeU;AACRP,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,GA9BiC,EA8B/B,CAACH,YAAD,CA9B+B,CAAlC;AAgCA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,IAAd;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAE;AAAE2B,UAAAA,SAAS,EAAE;AAAb,SAApC;AAAA,kBACG5B,eAAe,CAAC,KAAD,EAAQ,SAAR;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,KAAK,EAAE;AAAE4B,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,GAAG,EAAC,mBAAlB;AAAsC,UAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,YAAD;AAAA,+BACE,QAAC,mBAAD;AAAA,kCACE;AAAA,sBAAI5B,eAAe,CAAC,KAAD,EAAQ,eAAR;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,mBAAD;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,KAAK,MADP;AAEE,cAAA,IAAI,MAFN;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,oBAAI6B,SAAS,CAACC,SAAd,EAAyB;AACvBD,kBAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B9B,YAA9B;AACAC,kBAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA8B,kBAAAA,UAAU,CAAC,MAAM;AACf9B,oBAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,mBAFS,EAEP,IAFO,CAAV;AAGD;AACF,eAXH;AAAA,sCAaE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAbF,eAcE,QAAC,YAAD;AAAA,0BAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,sBAdF,eAeE,QAAC,OAAD;AAAS,gBAAA,kBAAkB,EAAEP,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eA+BE,QAAC,oBAAD;AAAA,gCACE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,QAAQ,EAAES,gBAApC;AAAsD,YAAA,OAAO,EAAEE,cAA/D;AAAA,uBACGL,eAAe,CAAC,KAAD,EAAQ,YAAR,CADlB,uBAEE,QAAC,UAAD;AAAY,cAAA,GAAG,EAAC,sBAAhB;AAAuC,cAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAE4B,YAAAA,SAAS,EAAE;AAAb,WAAnB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,MAAd;AAAe,YAAA,IAAI,EAAG,8DAA6D3B,YAAa,EAAhG;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAAA,yBACGD,eAAe,CAAC,KAAD,EAAQ,SAAR,CADlB,uBAEE,QAAC,UAAD;AAAY,gBAAA,GAAG,EAAC,qBAAhB;AAAsC,gBAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAG,YAAA,KAAK,EAAE;AAAEiC,cAAAA,UAAU,EAAE;AAAd,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CA3FD;;GAAMlC,Y;UACoBlB,O;;;OADpBkB,Y;AA6FN,eAAeA,YAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text, Flex, CopyIcon, Button, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\n\r\nconst CardImage = styled.img`\r\n  width: 60px;\r\n  height: auto;\r\n  margin-right: 20px;\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  @media only screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst TokenAddressWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TokenAccountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n`\r\n\r\nconst TokenAccount = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 40%;\r\n  color: #0080FF;\r\n  margin-left: 10px;\r\n\r\n  @media only screen and (min-width: 375px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 425px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  line-height: unset !important;\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\r\n  position: absolute;\r\n  bottom: -29px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n  padding: 5px;\r\n  width: 45%;\r\n\r\n  @media only screen and (min-width: 375px) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media only screen and (min-width: 425px) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`\r\n\r\nconst ActionsButtonWrapper = styled.div`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    width: 100%;\r\n\r\n    :hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst BuyWrapper = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst AddTokenIcon = styled.img`\r\n  width: 108px;\r\n  height: auto;\r\n  margin-bottom: 11px;\r\n`\r\n\r\nconst ButtonIcon = styled.img`\r\n  width: 34px;\r\n  height: 34px;\r\n`\r\n\r\nconst AddTokenCard = () => {\r\n  const TranslateString = useI18n()\r\n  const tokenAddress = getCakeAddress()\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n  const [addTokenDisabled, setAddTokenDisabled] = useState(false)\r\n\r\n  const handleAddToken = useCallback(async () => {\r\n    const windowAsAny = window as any\r\n    if (typeof windowAsAny.ethereum === 'undefined' && !windowAsAny.ethereum.isMetaMask) {\r\n      console.error('MetaMask is not installed!')\r\n    }\r\n\r\n    setAddTokenDisabled(true)\r\n\r\n    const tokenSymbol = 'GOB'\r\n    const tokenDecimals = 18\r\n    const tokenImage = `${process.env.REACT_APP_BASE_URL}/images/egg/9.png`\r\n\r\n    try {\r\n      const wasAdded = await windowAsAny.ethereum.request({\r\n        method: 'wallet_watchAsset',\r\n        params: {\r\n          type: 'ERC20',\r\n          options: {\r\n            address: tokenAddress,\r\n            symbol: tokenSymbol,\r\n            decimals: tokenDecimals,\r\n            image: tokenImage,\r\n          },\r\n        },\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setAddTokenDisabled(false)\r\n    }\r\n  }, [tokenAddress])\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n          {TranslateString(10015, 'Add GOB')}\r\n        </Heading>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <AddTokenIcon src=\"/images/egg/2.png\" alt=\"add logo\" />\r\n        </div>\r\n        <TokenWrapper>\r\n          <TokenAddressWrapper>\r\n            <p>{TranslateString(10016, 'Token Address')}</p>\r\n            <TokenAccountWrapper>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() => {\r\n                  if (navigator.clipboard) {\r\n                    navigator.clipboard.writeText(tokenAddress)\r\n                    setIsTooltipDisplayed(true)\r\n                    setTimeout(() => {\r\n                      setIsTooltipDisplayed(false)\r\n                    }, 1000)\r\n                  }\r\n                }}\r\n              >\r\n                <CopyIcon width=\"18px\" />\r\n                <TokenAccount>{tokenAddress}</TokenAccount>\r\n                <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n              </StyleButton>\r\n            </TokenAccountWrapper>\r\n          </TokenAddressWrapper>\r\n        </TokenWrapper>\r\n        <ActionsButtonWrapper>\r\n          <div>\r\n            <Button variant=\"primary\" disabled={addTokenDisabled} onClick={handleAddToken}>\r\n              {TranslateString(10017, 'Add GOB to')}&nbsp;\r\n              <ButtonIcon src=\"/images/metamask.png\" alt=\"metamask logo\" />\r\n            </Button>\r\n          </div>\r\n          <BuyWrapper style={{ textAlign: 'center' }}>\r\n            <Link external href={`https://exchange.pancakeswap.finance/#/swap?outputCurrency=${tokenAddress}`}>\r\n              <Button variant=\"primary\">\r\n                {TranslateString(10018, 'Buy GOB')}&nbsp;\r\n                <ButtonIcon src=\"/images/pancake.png\" alt=\"pancake logo\" />\r\n              </Button>\r\n            </Link>\r\n            <p style={{ paddingTop: '5px' }}> Slippage must be above 6% !</p>\r\n          </BuyWrapper>\r\n        </ActionsButtonWrapper>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddTokenCard\r\n"]},"metadata":{},"sourceType":"module"}