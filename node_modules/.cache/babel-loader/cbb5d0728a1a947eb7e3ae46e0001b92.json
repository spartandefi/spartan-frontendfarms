{"ast":null,"code":"var _jsxFileName = \"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useMemo } from 'react';\nimport { Card, CardBody, CardFooter, Flex, Button } from '@pancakeswap-libs/uikit';\nimport { getContract } from 'utils/erc20';\nimport useI18n from 'hooks/useI18n';\nimport UnlockButton from 'components/UnlockButton';\nimport { useApprovePresale } from 'hooks/useApprove';\nimport { getBusdAddress } from 'utils/addressHelpers';\nimport BuyAction from './BuyAction';\nimport styles from '../styles/presale.module.css';\nimport ClaimAction from './ClaimAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BuyCard = ({\n  account,\n  ethereum,\n  allowance,\n  busdBalance,\n  tokensUnclaimed,\n  tokenBalance,\n  tokensLeft\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const busdContract = useMemo(() => {\n    return getContract(ethereum, getBusdAddress());\n  }, [ethereum]);\n  const {\n    onApprove\n  } = useApprovePresale(busdContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove]);\n\n  const renderApprovalOrBuyButton = () => {\n    return isApproved ? /*#__PURE__*/_jsxDEV(BuyAction, {\n      busdBalance: busdBalance,\n      tokensUnclaimed: tokensUnclaimed,\n      tokenBalance: tokenBalance,\n      tokensLeft: tokensLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"8px\",\n      fullWidth: true,\n      onClick: handleApprove,\n      children: TranslateString(999, 'Approve Contract')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderClaimButton = () => {\n    return /*#__PURE__*/_jsxDEV(ClaimAction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      className: styles.cardContainer,\n      justifyContent: \"space-between\",\n      style: {\n        marginTop: '32px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: \"Buy Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          children: !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n            mt: \"8px\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }, this) : renderApprovalOrBuyButton()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: \"Claim Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          children: !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n            mt: \"8px\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 45\n          }, this) : renderClaimButton()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BuyCard, \"q4Eqcl4qgZW3/xF8M2PEUpPrVCs=\", false, function () {\n  return [useI18n, useApprovePresale];\n});\n\n_c = BuyCard;\nexport default BuyCard; // disabled={requestedApproval} \n\nvar _c;\n\n$RefreshReg$(_c, \"BuyCard\");","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyCard.tsx"],"names":["React","useCallback","useState","useMemo","Card","CardBody","CardFooter","Flex","Button","getContract","useI18n","UnlockButton","useApprovePresale","getBusdAddress","BuyAction","styles","ClaimAction","BuyCard","account","ethereum","allowance","busdBalance","tokensUnclaimed","tokenBalance","tokensLeft","TranslateString","requestedApproval","setRequestedApproval","isApproved","isGreaterThan","busdContract","onApprove","handleApprove","e","console","error","renderApprovalOrBuyButton","renderClaimButton","cardContainer","marginTop","card"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useMemo } from 'react'\r\nimport { Card, CardBody, CardFooter, Flex, Button } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove, useApprovePresale } from 'hooks/useApprove'\r\nimport { getBusdAddress } from 'utils/addressHelpers'\r\nimport BuyAction from './BuyAction'\r\nimport styles from '../styles/presale.module.css'\r\nimport ClaimAction from './ClaimAction'\r\n\r\ninterface BuyCardProps {\r\n    account?: string\r\n    ethereum?: provider\r\n    allowance?: BigNumber\r\n    busdBalance?: BigNumber\r\n    tokensUnclaimed?: BigNumber\r\n    tokenBalance?: BigNumber\r\n    tokensLeft?: BigNumber\r\n}\r\n\r\nconst BuyCard: React.FC<BuyCardProps> = ({ account, ethereum, allowance, busdBalance, tokensUnclaimed, tokenBalance, tokensLeft }) => {\r\n    const TranslateString = useI18n()\r\n    const [requestedApproval, setRequestedApproval] = useState(false)\r\n\r\n    const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n    const busdContract = useMemo(() => {\r\n        return getContract(ethereum as provider, getBusdAddress())\r\n    }, [ethereum])\r\n\r\n    const { onApprove } = useApprovePresale(busdContract)\r\n\r\n    const handleApprove = useCallback(async () => {\r\n        try {\r\n            setRequestedApproval(true)\r\n            await onApprove()\r\n            setRequestedApproval(false)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }, [onApprove])\r\n\r\n    const renderApprovalOrBuyButton = () => {\r\n        return isApproved ? (\r\n            <BuyAction busdBalance={busdBalance} tokensUnclaimed={tokensUnclaimed} tokenBalance={tokenBalance} tokensLeft={tokensLeft} />\r\n        ) : (\r\n            <Button mt=\"8px\" fullWidth onClick={handleApprove}>\r\n                {TranslateString(999, 'Approve Contract')}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    const renderClaimButton = () => {\r\n        return <ClaimAction />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Flex className={styles.cardContainer} justifyContent=\"space-between\" style={{ marginTop: '32px' }}>\r\n                <Card className={styles.card}>\r\n                    <CardBody>Buy Tokens</CardBody>\r\n                    <CardFooter>{!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrBuyButton()}</CardFooter>\r\n                </Card>\r\n                <Card className={styles.card}>\r\n                    <CardBody>Claim Tokens</CardBody>\r\n                    <CardFooter>{!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderClaimButton()}</CardFooter>\r\n                </Card>\r\n            </Flex>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyCard\r\n\r\n// disabled={requestedApproval} "]},"metadata":{},"sourceType":"module"}