{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchTotalReferralsDataAsync, fetchTotalReferralCommissionsDataAsync } from './actions';\nimport { QuoteToken } from '../config/constants/types';\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync()); // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh]);\n}; // Farms\n\n_s(useFetchPublicData, \"62xjdgPJn/QiIg6iwBNbkeZ7l4I=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Prices\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s8();\n\n  const pid = 2; // BUSD-BNB LP\n\n  const farm = useFarmFromPid(pid);\n  return (farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s8(usePriceBnbBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s9();\n\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // MRT-BUSD LP\n\n  const farm = useFarmFromPid(pid);\n  return (farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s9(usePriceCakeBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const useTotalValue = () => {\n  _s10();\n\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i];\n\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken);\n      } else {\n        val = farm.lpTotalInQuoteToken;\n      }\n\n      if (val > 0) {\n        value = value.plus(val);\n      }\n    }\n  }\n\n  return value;\n}; // Referrals\n\n_s10(useTotalValue, \"r6KOcd+Au1Cbju+lCn+Kj9ulyJM=\", false, function () {\n  return [useFarms, usePriceBnbBusd, usePriceCakeBusd];\n});\n\nexport const useReferrals = account => {\n  _s11();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchTotalReferralsDataAsync(account));\n      dispatch(fetchTotalReferralCommissionsDataAsync(account));\n    }\n  }, [account, dispatch]);\n  const referrals = useSelector(state => state.referrals.data);\n  return referrals;\n}; // Referrals\n\n_s11(useReferrals, \"NvXE36t78Ly98QEv9e1X/w7y7oI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport const usePresaleData = () => {\n  _s12();\n\n  const presale = useSelector(state => state.presale.data);\n  return presale;\n};\n\n_s12(usePresaleData, \"JWOEavFt1g3drjGrrPD+ga8fH1k=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/hooks.ts"],"names":["BigNumber","useEffect","useSelector","useDispatch","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsUserDataAsync","fetchTotalReferralsDataAsync","fetchTotalReferralCommissionsDataAsync","QuoteToken","ZERO","useFetchPublicData","dispatch","slowRefresh","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","tokenPriceVsQuote","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","lpTotalInQuoteToken","val","quoteTokenSymbol","BNB","times","CAKE","plus","useReferrals","referrals","usePresaleData","presale"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchTotalReferralsDataAsync,\r\n  fetchTotalReferralCommissionsDataAsync,\r\n  fetchTokensLeftDataAsync,\r\n  fetchUserTokensUnclaimedDataAsync\r\n} from './actions'\r\nimport { State, Farm, Pool, Referral, Presale } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    // dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 2 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  // const pid = 1 // CAKE-BNB LP\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  const pid = 0 // MRT-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const cakePrice = usePriceCakeBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      if (val > 0) {\r\n        value = value.plus(val)\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n// Referrals\r\n\r\nexport const useReferrals = (account): Referral => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchTotalReferralsDataAsync(account))\r\n      dispatch(fetchTotalReferralCommissionsDataAsync(account))\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const referrals = useSelector((state: State) => state.referrals.data)\r\n  return referrals\r\n}\r\n\r\n// Referrals\r\n\r\nexport const usePresaleData = (): Presale => {\r\n  const presale = useSelector((state: State) => state.presale.data)\r\n  return presale\r\n}\r\n"]},"metadata":{},"sourceType":"module"}