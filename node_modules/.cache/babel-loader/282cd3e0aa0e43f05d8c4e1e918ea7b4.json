{"ast":null,"code":"import busdABI from 'config/abi/busd.json';\nimport { getPresaleAddress, getBusdAddress } from 'utils/addressHelpers';\nimport { getWeb3 } from 'utils/web3';\nimport BigNumber from 'bignumber.js';\nconst web3 = getWeb3();\nconst busdContract = new web3.eth.Contract(busdABI, getBusdAddress());\n\nconst fetchTokensLeft = async () => {\n  const busdCollected = await busdContract.methods.balanceOf(getPresaleAddress()).call();\n  const busdPerToken = 3;\n  const presaleCap = new BigNumber(300000).multipliedBy(new BigNumber(10).pow(18)); // tochange\n\n  return presaleCap.minus(new BigNumber(busdCollected)).div(busdPerToken);\n};\n\nexport default fetchTokensLeft;","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/fetchTokensLeft.ts"],"names":["busdABI","getPresaleAddress","getBusdAddress","getWeb3","BigNumber","web3","busdContract","eth","Contract","fetchTokensLeft","busdCollected","methods","balanceOf","call","busdPerToken","presaleCap","multipliedBy","pow","minus","div"],"mappings":"AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,sBAAlD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,IAAI,GAAGF,OAAO,EAApB;AACA,MAAMG,YAAY,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAsBR,OAAtB,EAAqDE,cAAc,EAAnE,CAArB;;AAEA,MAAMO,eAAe,GAAG,YAAY;AAChC,QAAMC,aAAa,GAAG,MAAMJ,YAAY,CAACK,OAAb,CAAqBC,SAArB,CAA+BX,iBAAiB,EAAhD,EAAoDY,IAApD,EAA5B;AACA,QAAMC,YAAY,GAAG,CAArB;AACA,QAAMC,UAAU,GAAG,IAAIX,SAAJ,CAAc,MAAd,EAAsBY,YAAtB,CAAmC,IAAIZ,SAAJ,CAAc,EAAd,EAAkBa,GAAlB,CAAsB,EAAtB,CAAnC,CAAnB,CAHgC,CAGiD;;AACjF,SAAOF,UAAU,CAACG,KAAX,CAAiB,IAAId,SAAJ,CAAcM,aAAd,CAAjB,EAA+CS,GAA/C,CAAmDL,YAAnD,CAAP;AACH,CALD;;AAOA,eAAeL,eAAf","sourcesContent":["import { AbiItem } from 'web3-utils'\r\nimport busdABI from 'config/abi/busd.json'\r\nimport { getPresaleAddress, getBusdAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst web3 = getWeb3()\r\nconst busdContract = new web3.eth.Contract(busdABI as unknown as AbiItem, getBusdAddress())\r\n\r\nconst fetchTokensLeft = async () => {\r\n    const busdCollected = await busdContract.methods.balanceOf(getPresaleAddress()).call()\r\n    const busdPerToken = 3;\r\n    const presaleCap = new BigNumber(300000).multipliedBy(new BigNumber(10).pow(18)) // tochange\r\n    return presaleCap.minus(new BigNumber(busdCollected)).div(busdPerToken)\r\n}\r\n\r\nexport default fetchTokensLeft\r\n"]},"metadata":{},"sourceType":"module"}