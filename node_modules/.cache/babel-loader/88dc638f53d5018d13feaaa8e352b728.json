{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { getReferralCode } from 'utils/referrals';\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n    from: account\n  });\n};\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), getReferralCode()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  console.log('unstake');\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.emergencyWithdraw().send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods.deposit(pid, '0', getReferralCode()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit('0').send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    value: new BigNumber(0)\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const buy = async (presaleContract, amount, account) => {\n  return presaleContract.methods.buy(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const claim = async (presaleContract, account) => {\n  return presaleContract.methods.claimTokens(account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","getReferralCode","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","console","log","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","buy","presaleContract","claim","claimTokens"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { getParsedCommandLineOfConfigFile } from 'typescript'\r\nimport { getReferralCode } from 'utils/referrals'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), getReferralCode())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  console.log('unstake')\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', getReferralCode())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const buy = async (presaleContract, amount, account) => {\r\n  return presaleContract.methods\r\n    .buy(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (presaleContract, account) => {\r\n  return presaleContract.methods\r\n    .claimTokens(account)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}