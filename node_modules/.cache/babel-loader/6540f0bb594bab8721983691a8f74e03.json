{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useDispatch } from 'react-redux';\nimport { fetchUserTokensUnclaimedDataAsync, fetchUserBalanceDataAsync, fetchTokensLeftDataAsync } from 'state/actions';\nimport { buy, claim } from 'utils/callHelpers';\nimport { usePresale } from './useContract';\nexport const useBuy = () => {\n  _s();\n\n  const {\n    account\n  } = useWallet();\n  const dispatch = useDispatch();\n  const presaleContract = usePresale();\n  const handleBuy = useCallback(async amount => {\n    const txHash = await buy(presaleContract, amount, account);\n    dispatch(fetchUserTokensUnclaimedDataAsync(account));\n    dispatch(fetchUserBalanceDataAsync(account));\n    dispatch(fetchTokensLeftDataAsync());\n    console.info(txHash);\n  }, [account, dispatch, presaleContract]);\n  return {\n    onBuy: handleBuy\n  };\n};\n\n_s(useBuy, \"5M7AgSiiTqchereEOJL0HNa1gYw=\", false, function () {\n  return [useWallet, useDispatch, usePresale];\n});\n\nexport const useClaim = () => {\n  _s2();\n\n  const {\n    account\n  } = useWallet();\n  const dispatch = useDispatch();\n  const presaleContract = usePresale();\n  const handleClaim = useCallback(async () => {\n    const txHash = await claim(presaleContract, account);\n    dispatch(fetchUserTokensUnclaimedDataAsync(account));\n    dispatch(fetchUserBalanceDataAsync(account));\n    dispatch(fetchTokensLeftDataAsync());\n    console.info(txHash);\n  }, [account, dispatch, presaleContract]);\n  return {\n    onClaim: handleClaim\n  };\n};\n\n_s2(useClaim, \"YfDL1CczaAI7UkpDOv3C3mYL0XM=\", false, function () {\n  return [useWallet, useDispatch, usePresale];\n});","map":{"version":3,"sources":["/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/usePresale.ts"],"names":["useCallback","useWallet","useDispatch","fetchUserTokensUnclaimedDataAsync","fetchUserBalanceDataAsync","fetchTokensLeftDataAsync","buy","claim","usePresale","useBuy","account","dispatch","presaleContract","handleBuy","amount","txHash","console","info","onBuy","useClaim","handleClaim","onClaim"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iCAAT,EAA4CC,yBAA5C,EAAuEC,wBAAvE,QAAuG,eAAvG;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,eAAe,GAAGJ,UAAU,EAAlC;AAEA,QAAMK,SAAS,GAAGb,WAAW,CACzB,MAAOc,MAAP,IAA0B;AACtB,UAAMC,MAAM,GAAG,MAAMT,GAAG,CAACM,eAAD,EAAkBE,MAAlB,EAA0BJ,OAA1B,CAAxB;AACAC,IAAAA,QAAQ,CAACR,iCAAiC,CAACO,OAAD,CAAlC,CAAR;AACAC,IAAAA,QAAQ,CAACP,yBAAyB,CAACM,OAAD,CAA1B,CAAR;AACAC,IAAAA,QAAQ,CAACN,wBAAwB,EAAzB,CAAR;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACH,GAPwB,EAQzB,CAACL,OAAD,EAAUC,QAAV,EAAoBC,eAApB,CARyB,CAA7B;AAWA,SAAO;AAAEM,IAAAA,KAAK,EAAEL;AAAT,GAAP;AACH,CAjBM;;GAAMJ,M;UACWR,S,EACHC,W,EACOM,U;;;AAgB5B,OAAO,MAAMW,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAET,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,eAAe,GAAGJ,UAAU,EAAlC;AAEA,QAAMY,WAAW,GAAGpB,WAAW,CAC3B,YAAY;AACR,UAAMe,MAAM,GAAG,MAAMR,KAAK,CAACK,eAAD,EAAkBF,OAAlB,CAA1B;AACAC,IAAAA,QAAQ,CAACR,iCAAiC,CAACO,OAAD,CAAlC,CAAR;AACAC,IAAAA,QAAQ,CAACP,yBAAyB,CAACM,OAAD,CAA1B,CAAR;AACAC,IAAAA,QAAQ,CAACN,wBAAwB,EAAzB,CAAR;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACH,GAP0B,EAQ3B,CAACL,OAAD,EAAUC,QAAV,EAAoBC,eAApB,CAR2B,CAA/B;AAWA,SAAO;AAAES,IAAAA,OAAO,EAAED;AAAX,GAAP;AACH,CAjBM;;IAAMD,Q;UACWlB,S,EACHC,W,EACOM,U","sourcesContent":["import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchUserTokensUnclaimedDataAsync, fetchUserBalanceDataAsync, fetchTokensLeftDataAsync } from 'state/actions'\r\nimport { buy, claim } from 'utils/callHelpers'\r\nimport { usePresale } from './useContract'\r\n\r\nexport const useBuy = () => {\r\n    const { account } = useWallet()\r\n    const dispatch = useDispatch()\r\n    const presaleContract = usePresale()\r\n\r\n    const handleBuy = useCallback(\r\n        async (amount: string) => {\r\n            const txHash = await buy(presaleContract, amount, account)\r\n            dispatch(fetchUserTokensUnclaimedDataAsync(account))\r\n            dispatch(fetchUserBalanceDataAsync(account))\r\n            dispatch(fetchTokensLeftDataAsync())\r\n            console.info(txHash)\r\n        },\r\n        [account, dispatch, presaleContract],\r\n    )\r\n\r\n    return { onBuy: handleBuy }\r\n}\r\n\r\nexport const useClaim = () => {\r\n    const { account } = useWallet()\r\n    const dispatch = useDispatch()\r\n    const presaleContract = usePresale()\r\n\r\n    const handleClaim = useCallback(\r\n        async () => {\r\n            const txHash = await claim(presaleContract, account)\r\n            dispatch(fetchUserTokensUnclaimedDataAsync(account))\r\n            dispatch(fetchUserBalanceDataAsync(account))\r\n            dispatch(fetchTokensLeftDataAsync())\r\n            console.info(txHash)\r\n        },\r\n        [account, dispatch, presaleContract],\r\n    )\r\n\r\n    return { onClaim: handleClaim }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}