[{"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/index.tsx":"1","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/App.tsx":"2","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/Providers.tsx":"3","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/style/Global.tsx":"4","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/NotFound.tsx":"5","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/PageLoader.tsx":"6","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Nft/components/NftGlobalNotification.tsx":"7","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/hooks.ts":"8","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/index.ts":"9","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/index.ts":"10","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/index.ts":"11","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/getRpcUrl.ts":"12","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Menu/index.tsx":"13","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/index.tsx":"14","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Comingsoon/index.tsx":"15","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/ThemeContext.tsx":"16","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/BlockContext.tsx":"17","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/RefreshContext.tsx":"18","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/Localisation/languageContext.tsx":"19","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Page.tsx":"20","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/index.ts":"21","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/actions.ts":"22","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/types.ts":"23","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Menu/config.ts":"24","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/Home.tsx":"25","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/Farms.tsx":"26","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/Presale.tsx":"27","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/multicall.ts":"28","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useI18n.ts":"29","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/Referrals.tsx":"30","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/nfts.ts":"31","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Comingsoon/Comingsoon.tsx":"32","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Container.tsx":"33","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useRefresh.ts":"34","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useTheme.ts":"35","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/web3.ts":"36","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/Localisation/translationsContext.ts":"37","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/translateTextHelpers.ts":"38","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/localisation/languageCodes.ts":"39","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyCard.tsx":"40","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/Divider.tsx":"41","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/FarmCard.tsx":"42","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/WinCard.tsx":"43","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/TwitterCard.tsx":"44","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeStats.tsx":"45","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CountDownCard.tsx":"46","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/EarnAssetCard.tsx":"47","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/FarmStakingCard.tsx":"48","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/EarnAPRCard.tsx":"49","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/AddTokenCard.tsx":"50","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/TotalValueLockedCard.tsx":"51","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/components/ReferralCount.tsx":"52","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/components/ReferralLink.tsx":"53","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/index.ts":"54","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/index.ts":"55","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/index.ts":"56","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/index.ts":"57","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/addressHelpers.ts":"58","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/formatBalance.ts":"59","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/UnlockButton.tsx":"60","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Flex.tsx":"61","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmTabButtons/index.tsx":"62","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useAllEarnings.ts":"63","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useTokenBalance.ts":"64","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/ClaimAction.tsx":"65","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyAction.tsx":"66","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CardValue.tsx":"67","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeWalletBalance.tsx":"68","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeHarvestBalance.tsx":"69","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/fetchFarmUser.ts":"70","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/fetchPoolsUser.ts":"71","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/fetchUserPresale.ts":"72","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/fetchTokensLeft.ts":"73","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/fetchTotalReferrals.ts":"74","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/fetchTotalReferralCommissions.ts":"75","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/fetchPools.ts":"76","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/fetchFarms.ts":"77","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/index.ts":"78","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useApprove.ts":"79","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useHarvest.ts":"80","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useFarmsWithBalance.ts":"81","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/ApyButton.tsx":"82","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/CardActionsContainer.tsx":"83","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/DigitTimer.tsx":"84","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyModal.tsx":"85","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/CardHeading.tsx":"86","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/DetailsSection.tsx":"87","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/presale.ts":"88","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/referrals.ts":"89","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/pools.ts":"90","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/farms.ts":"91","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/contracts.ts":"92","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useContract.ts":"93","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/erc20.ts":"94","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/usePresale.ts":"95","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx":"96","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/HarvestAction.tsx":"97","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/StakeAction.tsx":"98","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/index.ts":"99","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ExpandableSectionButton/index.ts":"100","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/getLiquidityUrlPathParts.ts":"101","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useStake.ts":"102","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Tags.tsx":"103","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/WithdrawModal.tsx":"104","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/DepositModal.tsx":"105","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/ifo.ts":"106","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/callHelpers.ts":"107","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useWeb3.ts":"108","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/TokenInput/index.ts":"109","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/compoundApyHelpers.ts":"110","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx":"111","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ModalActions/index.ts":"112","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useUnstake.ts":"113","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/TokenInput/TokenInput.tsx":"114","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ModalActions/ModalActions.tsx":"115","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/referrals.ts":"116","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Input/index.ts":"117","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Spacer/index.ts":"118","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Input/Input.tsx":"119","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Spacer/Spacer.tsx":"120"},{"size":278,"mtime":1626161329000,"results":"121","hashOfConfig":"122"},{"size":2451,"mtime":1626161329000,"results":"123","hashOfConfig":"122"},{"size":1393,"mtime":1626161329000,"results":"124","hashOfConfig":"122"},{"size":498,"mtime":1626161329000,"results":"125","hashOfConfig":"122"},{"size":856,"mtime":1626161329000,"results":"126","hashOfConfig":"122"},{"size":397,"mtime":1626161329000,"results":"127","hashOfConfig":"122"},{"size":2937,"mtime":1626161329000,"results":"128","hashOfConfig":"122"},{"size":4232,"mtime":1626161329000,"results":"129","hashOfConfig":"122"},{"size":35,"mtime":1626161329000,"results":"130","hashOfConfig":"122"},{"size":34,"mtime":1626161329000,"results":"131","hashOfConfig":"122"},{"size":37,"mtime":1626161329000,"results":"132","hashOfConfig":"122"},{"size":329,"mtime":1626161329000,"results":"133","hashOfConfig":"122"},{"size":1079,"mtime":1626161329000,"results":"134","hashOfConfig":"122"},{"size":37,"mtime":1626161329000,"results":"135","hashOfConfig":"122"},{"size":38,"mtime":1626161329000,"results":"136","hashOfConfig":"122"},{"size":937,"mtime":1626161329000,"results":"137","hashOfConfig":"122"},{"size":772,"mtime":1626161329000,"results":"138","hashOfConfig":"122"},{"size":983,"mtime":1626161329000,"results":"139","hashOfConfig":"122"},{"size":3147,"mtime":1626161329000,"results":"140","hashOfConfig":"122"},{"size":426,"mtime":1626161329000,"results":"141","hashOfConfig":"122"},{"size":433,"mtime":1626161329000,"results":"142","hashOfConfig":"122"},{"size":517,"mtime":1626161329000,"results":"143","hashOfConfig":"122"},{"size":2090,"mtime":1626161329000,"results":"144","hashOfConfig":"122"},{"size":2461,"mtime":1626161329000,"results":"145","hashOfConfig":"122"},{"size":2646,"mtime":1626161329000,"results":"146","hashOfConfig":"122"},{"size":4949,"mtime":1626161329000,"results":"147","hashOfConfig":"122"},{"size":7551,"mtime":1626161329000,"results":"148","hashOfConfig":"122"},{"size":964,"mtime":1626161329000,"results":"149","hashOfConfig":"122"},{"size":566,"mtime":1626161329000,"results":"150","hashOfConfig":"122"},{"size":2710,"mtime":1626161329000,"results":"151","hashOfConfig":"122"},{"size":2120,"mtime":1626161329000,"results":"152","hashOfConfig":"122"},{"size":1078,"mtime":1626161329000,"results":"153","hashOfConfig":"122"},{"size":321,"mtime":1626161329000,"results":"154","hashOfConfig":"122"},{"size":260,"mtime":1626161329000,"results":"155","hashOfConfig":"122"},{"size":371,"mtime":1626161329000,"results":"156","hashOfConfig":"122"},{"size":770,"mtime":1626161329000,"results":"157","hashOfConfig":"122"},{"size":404,"mtime":1626161329000,"results":"158","hashOfConfig":"122"},{"size":1614,"mtime":1626161329000,"results":"159","hashOfConfig":"122"},{"size":2059,"mtime":1626161329000,"results":"160","hashOfConfig":"122"},{"size":2855,"mtime":1626161329000,"results":"161","hashOfConfig":"122"},{"size":193,"mtime":1626161329000,"results":"162","hashOfConfig":"122"},{"size":6699,"mtime":1626161329000,"results":"163","hashOfConfig":"122"},{"size":1223,"mtime":1626161329000,"results":"164","hashOfConfig":"122"},{"size":1034,"mtime":1626161329000,"results":"165","hashOfConfig":"122"},{"size":2659,"mtime":1626161329000,"results":"166","hashOfConfig":"122"},{"size":4464,"mtime":1626161329000,"results":"167","hashOfConfig":"122"},{"size":1263,"mtime":1626161329000,"results":"168","hashOfConfig":"122"},{"size":3747,"mtime":1626161329000,"results":"169","hashOfConfig":"122"},{"size":3516,"mtime":1626161329000,"results":"170","hashOfConfig":"122"},{"size":5937,"mtime":1626161329000,"results":"171","hashOfConfig":"122"},{"size":1236,"mtime":1626161329000,"results":"172","hashOfConfig":"122"},{"size":1617,"mtime":1626161329000,"results":"173","hashOfConfig":"122"},{"size":1428,"mtime":1626161329000,"results":"174","hashOfConfig":"122"},{"size":2132,"mtime":1626161329000,"results":"175","hashOfConfig":"122"},{"size":3825,"mtime":1626161329000,"results":"176","hashOfConfig":"122"},{"size":2261,"mtime":1626161329000,"results":"177","hashOfConfig":"122"},{"size":1383,"mtime":1626161329000,"results":"178","hashOfConfig":"122"},{"size":848,"mtime":1626161329000,"results":"179","hashOfConfig":"122"},{"size":400,"mtime":1626161329000,"results":"180","hashOfConfig":"122"},{"size":562,"mtime":1626161329000,"results":"181","hashOfConfig":"122"},{"size":298,"mtime":1626161329000,"results":"182","hashOfConfig":"122"},{"size":1319,"mtime":1626161329000,"results":"183","hashOfConfig":"122"},{"size":999,"mtime":1626161329000,"results":"184","hashOfConfig":"122"},{"size":2002,"mtime":1626161329000,"results":"185","hashOfConfig":"122"},{"size":1014,"mtime":1626161329000,"results":"186","hashOfConfig":"122"},{"size":1521,"mtime":1626161329000,"results":"187","hashOfConfig":"122"},{"size":871,"mtime":1626161329000,"results":"188","hashOfConfig":"122"},{"size":767,"mtime":1626161329000,"results":"189","hashOfConfig":"122"},{"size":676,"mtime":1626161329000,"results":"190","hashOfConfig":"122"},{"size":3149,"mtime":1626161329000,"results":"191","hashOfConfig":"122"},{"size":3487,"mtime":1626161329000,"results":"192","hashOfConfig":"122"},{"size":1369,"mtime":1626161329000,"results":"193","hashOfConfig":"122"},{"size":725,"mtime":1626161329000,"results":"194","hashOfConfig":"122"},{"size":524,"mtime":1626161329000,"results":"195","hashOfConfig":"122"},{"size":574,"mtime":1626161329000,"results":"196","hashOfConfig":"122"},{"size":2433,"mtime":1626161329000,"results":"197","hashOfConfig":"122"},{"size":4601,"mtime":1626161329000,"results":"198","hashOfConfig":"122"},{"size":295,"mtime":1626161329000,"results":"199","hashOfConfig":"122"},{"size":3141,"mtime":1626161329000,"results":"200","hashOfConfig":"122"},{"size":2055,"mtime":1626161329000,"results":"201","hashOfConfig":"122"},{"size":1337,"mtime":1626161329000,"results":"202","hashOfConfig":"122"},{"size":1051,"mtime":1626161329000,"results":"203","hashOfConfig":"122"},{"size":3320,"mtime":1626161329000,"results":"204","hashOfConfig":"122"},{"size":1613,"mtime":1627049918192,"results":"205","hashOfConfig":"122"},{"size":2720,"mtime":1626161329000,"results":"206","hashOfConfig":"122"},{"size":1336,"mtime":1626161329000,"results":"207","hashOfConfig":"122"},{"size":2316,"mtime":1626161329000,"results":"208","hashOfConfig":"122"},{"size":268,"mtime":1626161329000,"results":"209","hashOfConfig":"122"},{"size":166,"mtime":1626161329000,"results":"210","hashOfConfig":"122"},{"size":1243,"mtime":1626161329000,"results":"211","hashOfConfig":"122"},{"size":9646,"mtime":1626161329000,"results":"212","hashOfConfig":"122"},{"size":784,"mtime":1626161329000,"results":"213","hashOfConfig":"122"},{"size":3017,"mtime":1626161329000,"results":"214","hashOfConfig":"122"},{"size":1105,"mtime":1626161329000,"results":"215","hashOfConfig":"122"},{"size":1557,"mtime":1626161329000,"results":"216","hashOfConfig":"122"},{"size":4733,"mtime":1626161329000,"results":"217","hashOfConfig":"122"},{"size":2041,"mtime":1626161329000,"results":"218","hashOfConfig":"122"},{"size":2146,"mtime":1626161329000,"results":"219","hashOfConfig":"122"},{"size":279,"mtime":1626161329000,"results":"220","hashOfConfig":"122"},{"size":53,"mtime":1626161329000,"results":"221","hashOfConfig":"122"},{"size":584,"mtime":1626161329000,"results":"222","hashOfConfig":"122"},{"size":1690,"mtime":1626161329000,"results":"223","hashOfConfig":"122"},{"size":819,"mtime":1626161329000,"results":"224","hashOfConfig":"122"},{"size":1914,"mtime":1626161329000,"results":"225","hashOfConfig":"122"},{"size":2023,"mtime":1626161329000,"results":"226","hashOfConfig":"122"},{"size":4693,"mtime":1626161329000,"results":"227","hashOfConfig":"122"},{"size":4161,"mtime":1626161329000,"results":"228","hashOfConfig":"122"},{"size":1023,"mtime":1626161329000,"results":"229","hashOfConfig":"122"},{"size":40,"mtime":1626161329000,"results":"230","hashOfConfig":"122"},{"size":1316,"mtime":1626161329000,"results":"231","hashOfConfig":"122"},{"size":938,"mtime":1626161329000,"results":"232","hashOfConfig":"122"},{"size":42,"mtime":1626161329000,"results":"233","hashOfConfig":"122"},{"size":2033,"mtime":1626161329000,"results":"234","hashOfConfig":"122"},{"size":2084,"mtime":1626161329000,"results":"235","hashOfConfig":"122"},{"size":797,"mtime":1626161329000,"results":"236","hashOfConfig":"122"},{"size":3074,"mtime":1626161329000,"results":"237","hashOfConfig":"122"},{"size":78,"mtime":1626161329000,"results":"238","hashOfConfig":"122"},{"size":36,"mtime":1626161329000,"results":"239","hashOfConfig":"122"},{"size":1164,"mtime":1626161329000,"results":"240","hashOfConfig":"122"},{"size":722,"mtime":1626161329000,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"fux6a7",{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"249","messages":"250","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"244"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"280","messages":"281","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"244"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"289","messages":"290","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"244"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"300","messages":"301","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"244"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"317","messages":"318","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"244"},{"filePath":"320","messages":"321","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"244"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"327","messages":"328","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"244"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"332","messages":"333","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"244"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"349","messages":"350","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"244"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"382","messages":"383","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"244"},{"filePath":"385","messages":"386","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"244"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"394","messages":"395","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"244"},{"filePath":"397","messages":"398","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"244"},{"filePath":"400","messages":"401","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"244"},{"filePath":"403","messages":"404","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"244"},{"filePath":"406","messages":"407","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"244"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"421","messages":"422","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"244"},{"filePath":"424","messages":"425","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"244"},{"filePath":"427","messages":"428","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"244"},{"filePath":"432","messages":"433","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"244"},{"filePath":"435","messages":"436","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"244"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"448","messages":"449","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"244"},{"filePath":"451","messages":"452","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"244"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"456","messages":"457","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"244"},{"filePath":"459","messages":"460","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"244"},{"filePath":"462","messages":"463","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"244"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"475","messages":"476","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"244"},{"filePath":"478","messages":"479","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"244"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"485","messages":"486","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"244"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"492","messages":"493","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"244"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"499","messages":"500","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"244"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"504","messages":"505","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"244"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"511","messages":"512","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"244"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/index.tsx",[],[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/App.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/Providers.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/style/Global.tsx",["516"],"import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Nunito Sans', Poppin;\r\n  }\r\n  body {\r\n    background-color: #1f1f1f;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/NotFound.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/PageLoader.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Nft/components/NftGlobalNotification.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/hooks.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/getRpcUrl.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Menu/index.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/index.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Comingsoon/index.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/ThemeContext.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/BlockContext.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/RefreshContext.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/Localisation/languageContext.tsx",["517"],"import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Page.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/actions.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/types.ts",["518"],"import BigNumber from \"bignumber.js\"\r\n\r\nexport type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  risk: number\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: QuoteToken\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n\r\nexport interface ReferralConfig {\r\n  totalReferrals: number\r\n  totalReferralCommissions: number\r\n}\r\n\r\nexport interface PresaleConfig {\r\n  tokensLeft: BigNumber\r\n  tokensUnclaimed: BigNumber\r\n  userAllowance: BigNumber\r\n  busdBalance: BigNumber\r\n  cakeBalance: BigNumber\r\n}\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Menu/config.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/Home.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/Farms.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/Presale.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/multicall.ts",["519"],"import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useI18n.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/Referrals.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/nfts.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Comingsoon/Comingsoon.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Container.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useRefresh.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useTheme.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/web3.ts",["520"],"import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider }\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/contexts/Localisation/translationsContext.ts",["521"],"import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/translateTextHelpers.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/localisation/languageCodes.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyCard.tsx",["522"],"import React, { useEffect, useCallback, useState, useMemo } from 'react'\r\nimport { Card, CardBody, CardFooter, Flex, Button } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove, useApprovePresale } from 'hooks/useApprove'\r\nimport { getBusdAddress } from 'utils/addressHelpers'\r\nimport BuyAction from './BuyAction'\r\nimport styles from '../styles/presale.module.css'\r\nimport ClaimAction from './ClaimAction'\r\n\r\ninterface BuyCardProps {\r\n    account?: string\r\n    ethereum?: provider\r\n    allowance?: BigNumber\r\n    busdBalance?: BigNumber\r\n    tokensUnclaimed?: BigNumber\r\n    tokenBalance?: BigNumber\r\n    tokensLeft?: BigNumber\r\n}\r\n\r\nconst BuyCard: React.FC<BuyCardProps> = ({ account, ethereum, allowance, busdBalance, tokensUnclaimed, tokenBalance, tokensLeft }) => {\r\n    const TranslateString = useI18n()\r\n    const [requestedApproval, setRequestedApproval] = useState(false)\r\n\r\n    const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n    const busdContract = useMemo(() => {\r\n        return getContract(ethereum as provider, getBusdAddress())\r\n    }, [ethereum])\r\n\r\n    const { onApprove } = useApprovePresale(busdContract)\r\n\r\n    const handleApprove = useCallback(async () => {\r\n        try {\r\n            setRequestedApproval(true)\r\n            await onApprove()\r\n            setRequestedApproval(false)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }, [onApprove])\r\n\r\n    const renderApprovalOrBuyButton = () => {\r\n        return isApproved ? (\r\n            <BuyAction busdBalance={busdBalance} tokensUnclaimed={tokensUnclaimed} tokenBalance={tokenBalance} tokensLeft={tokensLeft} />\r\n        ) : (\r\n            <Button mt=\"8px\" fullWidth onClick={handleApprove}>\r\n                {TranslateString(999, 'Approve Contract')}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    const renderClaimButton = () => {\r\n        return <ClaimAction />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Flex className={styles.cardContainer} justifyContent=\"space-between\" style={{ marginTop: '32px' }}>\r\n                <Card className={styles.card}>\r\n                    <CardBody>Buy Tokens</CardBody>\r\n                    <CardFooter>{!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrBuyButton()}</CardFooter>\r\n                </Card>\r\n                <Card className={styles.card}>\r\n                    <CardBody>Claim Tokens</CardBody>\r\n                    <CardFooter>{!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderClaimButton()}</CardFooter>\r\n                </Card>\r\n            </Flex>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuyCard\r\n\r\n// disabled={requestedApproval} ","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/Divider.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/FarmCard.tsx",["523"],"import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst Glow = keyframes`\r\n  from {\r\n    box-shadow:0px 0px 5px 2px #52c41a;\r\n  }\r\n  to {\r\n    box-shadow:0px 0px 15px 10px #52c41a;\r\n  }\r\n`\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(45deg,\r\n  rgba(255, 0, 0, 1) 0%,\r\n  rgba(255, 154, 0, 1) 10%,\r\n  rgba(208, 222, 33, 1) 20%,\r\n  rgba(79, 220, 74, 1) 30%,\r\n  rgba(63, 218, 216, 1) 40%,\r\n  rgba(47, 201, 226, 1) 50%,\r\n  rgba(28, 127, 238, 1) 60%,\r\n  rgba(95, 21, 242, 1) 70%,\r\n  rgba(186, 12, 248, 1) 80%,\r\n  rgba(251, 7, 217, 1) 90%,\r\n  rgba(255, 0, 0, 1) 100%);\r\n  background-size: 300% 300%;\r\n  animation: ${Glow} 1s infinite alternate;\r\n  border-radius: 12px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\n// animation: ${RainbowLight} 2s linear infinite;\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 12px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol\r\n  const earnLabel = 'GOB'\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'GOB' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        risk={risk}\r\n        depositFee={farm.depositFeeBP}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent='space-between' alignItems='center'>\r\n          <Text>{TranslateString(352, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent='space-between'>\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent='space-between'>\r\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\r\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          bscScanAddress={\r\n            farm.isTokenOnly ?\r\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              :\r\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          quoteTokenAdresses={quoteTokenAdresses}\r\n          quoteTokenSymbol={quoteTokenSymbol}\r\n          tokenAddresses={tokenAddresses}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/WinCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/TwitterCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeStats.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CountDownCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/EarnAssetCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/FarmStakingCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/EarnAPRCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/AddTokenCard.tsx",["524"],"import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text, Flex, CopyIcon, Button, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\n\r\nconst CardImage = styled.img`\r\n  width: 60px;\r\n  height: auto;\r\n  margin-right: 20px;\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  @media only screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst TokenAddressWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TokenAccountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n`\r\n\r\nconst TokenAccount = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 40%;\r\n  color: #0080FF;\r\n  margin-left: 10px;\r\n\r\n  @media only screen and (min-width: 375px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 425px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  line-height: unset !important;\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\r\n  position: absolute;\r\n  bottom: -29px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n  padding: 5px;\r\n  width: 45%;\r\n\r\n  @media only screen and (min-width: 375px) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media only screen and (min-width: 425px) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`\r\n\r\nconst ActionsButtonWrapper = styled.div`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    width: 100%;\r\n\r\n    :hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst BuyWrapper = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst AddTokenIcon = styled.img`\r\n  width: 108px;\r\n  height: auto;\r\n  margin-bottom: 11px;\r\n`\r\n\r\nconst ButtonIcon = styled.img`\r\n  width: 34px;\r\n  height: 34px;\r\n`\r\n\r\nconst AddTokenCard = () => {\r\n  const TranslateString = useI18n()\r\n  const tokenAddress = getCakeAddress()\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n  const [addTokenDisabled, setAddTokenDisabled] = useState(false)\r\n\r\n  const handleAddToken = useCallback(async () => {\r\n    const windowAsAny = window as any\r\n    if (typeof windowAsAny.ethereum === 'undefined' && !windowAsAny.ethereum.isMetaMask) {\r\n      console.error('MetaMask is not installed!')\r\n    }\r\n\r\n    setAddTokenDisabled(true)\r\n\r\n    const tokenSymbol = 'GOB'\r\n    const tokenDecimals = 18\r\n    const tokenImage = `${process.env.REACT_APP_BASE_URL}/images/egg/9.png`\r\n\r\n    try {\r\n      const wasAdded = await windowAsAny.ethereum.request({\r\n        method: 'wallet_watchAsset',\r\n        params: {\r\n          type: 'ERC20',\r\n          options: {\r\n            address: tokenAddress,\r\n            symbol: tokenSymbol,\r\n            decimals: tokenDecimals,\r\n            image: tokenImage,\r\n          },\r\n        },\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setAddTokenDisabled(false)\r\n    }\r\n  }, [tokenAddress])\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\" style={{ textAlign: 'center' }}>\r\n          {TranslateString(10015, 'Add GOB')}\r\n        </Heading>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <AddTokenIcon src=\"/images/egg/2.png\" alt=\"add logo\" />\r\n        </div>\r\n        <TokenWrapper>\r\n          <TokenAddressWrapper>\r\n            <p>{TranslateString(10016, 'Token Address')}</p>\r\n            <TokenAccountWrapper>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() => {\r\n                  if (navigator.clipboard) {\r\n                    navigator.clipboard.writeText(tokenAddress)\r\n                    setIsTooltipDisplayed(true)\r\n                    setTimeout(() => {\r\n                      setIsTooltipDisplayed(false)\r\n                    }, 1000)\r\n                  }\r\n                }}\r\n              >\r\n                <CopyIcon width=\"18px\" />\r\n                <TokenAccount>{tokenAddress}</TokenAccount>\r\n                <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n              </StyleButton>\r\n            </TokenAccountWrapper>\r\n          </TokenAddressWrapper>\r\n        </TokenWrapper>\r\n        <ActionsButtonWrapper>\r\n          <div>\r\n            <Button variant=\"primary\" disabled={addTokenDisabled} onClick={handleAddToken}>\r\n              {TranslateString(10017, 'Add GOB to')}&nbsp;\r\n              <ButtonIcon src=\"/images/metamask.png\" alt=\"metamask logo\" />\r\n            </Button>\r\n          </div>\r\n          <BuyWrapper style={{ textAlign: 'center' }}>\r\n            <Link external href={`https://exchange.pancakeswap.finance/#/swap?outputCurrency=${tokenAddress}`}>\r\n              <Button variant=\"primary\">\r\n                {TranslateString(10018, 'Buy GOB')}&nbsp;\r\n                <ButtonIcon src=\"/images/pancake.png\" alt=\"pancake logo\" />\r\n              </Button>\r\n            </Link>\r\n            <p style={{ paddingTop: '5px' }}> Slippage must be above 6% !</p>\r\n          </BuyWrapper>\r\n        </ActionsButtonWrapper>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddTokenCard\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/TotalValueLockedCard.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/components/ReferralCount.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Referrals/components/ReferralLink.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/addressHelpers.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/formatBalance.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/UnlockButton.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/layout/Flex.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmTabButtons/index.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useAllEarnings.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useTokenBalance.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/ClaimAction.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyAction.tsx",["525"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useBuy } from 'hooks/usePresale'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport BuyModal from './BuyModal'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\n\r\ninterface BuyActionProps {\r\n    busdBalance?: BigNumber\r\n    tokensUnclaimed?: BigNumber\r\n    tokenBalance?: BigNumber\r\n    tokensLeft?: BigNumber\r\n}\r\n\r\n\r\nconst BuyAction: React.FC<BuyActionProps> = ({ busdBalance, tokensUnclaimed, tokenBalance, tokensLeft }) => {\r\n    const TranslateString = useI18n()\r\n    const { onBuy } = useBuy()\r\n\r\n    const [onPresentBuy] = useModal(\r\n        <BuyModal max={busdBalance} onConfirm={onBuy} tokenName=\"BUSD\" tokensUnclaimed={tokensUnclaimed} tokenBalance={tokenBalance} tokensLeft={tokensLeft} />\r\n    )\r\n\r\n    const renderStakingButtons = () => {\r\n        // tochange\r\n        return <Button disabled fullWidth onClick={onPresentBuy}>Buy</Button>\r\n    }\r\n\r\n    return (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" flexDirection=\"column\">\r\n            {/* {renderStakingButtons()} */}\r\n            Presale has ended. You can buy our tokens from PCS!\r\n            {/* to change */}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default BuyAction","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CardValue.tsx",["526"],"import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  prefix?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold fontSize={fontSize}>\r\n      {prefix}{countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeWalletBalance.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Home/components/CakeHarvestBalance.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/fetchFarmUser.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/fetchPoolsUser.ts",["527"],"import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingGoblin('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/fetchUserPresale.ts",["528"],"import { AbiItem } from 'web3-utils'\r\nimport presaleABI from 'config/abi/presale.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport busdABI from 'config/abi/busd.json'\r\nimport { getBusdAddress, getCakeAddress, getPresaleAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst web3 = getWeb3()\r\nconst busdContract = new web3.eth.Contract(busdABI as unknown as AbiItem, getBusdAddress())\r\nconst cakeContract = new web3.eth.Contract(busdABI as unknown as AbiItem, getCakeAddress())\r\nconst presaleContract = new web3.eth.Contract(presaleABI as unknown as AbiItem, getPresaleAddress())\r\n\r\nexport const fetchUserPresaleAllowances = async (address) => {\r\n    const presaleAllowances = await busdContract.methods.allowance(address, getPresaleAddress()).call()\r\n    return new BigNumber(presaleAllowances)\r\n}\r\n\r\nexport const fetchUserPresaleBalance = async (address) => {\r\n    const busdBalance = await busdContract.methods.balanceOf(address).call()\r\n    const cakeBalance = await cakeContract.methods.balanceOf(address).call()\r\n    return [new BigNumber(busdBalance), new BigNumber(cakeBalance)]\r\n}\r\n\r\nexport const fetchUserTokensUnclaimed = async (address) => {\r\n    const tokensUnclaimed = await presaleContract.methods.tokensUnclaimed(address).call()\r\n    return new BigNumber(tokensUnclaimed)\r\n}\r\n\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/presale/fetchTokensLeft.ts",["529"],"import { AbiItem } from 'web3-utils'\r\nimport busdABI from 'config/abi/busd.json'\r\nimport { getPresaleAddress, getBusdAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst web3 = getWeb3()\r\nconst busdContract = new web3.eth.Contract(busdABI as unknown as AbiItem, getBusdAddress())\r\n\r\nconst fetchTokensLeft = async () => {\r\n    const busdCollected = await busdContract.methods.balanceOf(getPresaleAddress()).call()\r\n    const busdPerToken = 3;\r\n    const presaleCap = new BigNumber(300000).multipliedBy(new BigNumber(10).pow(18)) // tochange\r\n    return presaleCap.minus(new BigNumber(busdCollected)).div(busdPerToken)\r\n}\r\n\r\nexport default fetchTokensLeft\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/fetchTotalReferrals.ts",["530"],"import { AbiItem } from 'web3-utils'\r\nimport referralABI from 'config/abi/referral.json'\r\nimport { getReferralAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst web3 = getWeb3()\r\nconst referralContract = new web3.eth.Contract(referralABI as unknown as AbiItem, getReferralAddress())\r\n\r\nconst fetchTotalReferrals = async (address) => {\r\n  const referralsCount = await referralContract.methods.referralsCount(address).call()\r\n  return referralsCount\r\n}\r\n\r\nexport default fetchTotalReferrals\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/referrals/fetchTotalReferralCommissions.ts",["531"],"import { AbiItem } from 'web3-utils'\r\nimport referralABI from 'config/abi/referral.json'\r\nimport { getReferralAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst web3 = getWeb3()\r\nconst referralContract = new web3.eth.Contract(referralABI as unknown as AbiItem, getReferralAddress())\r\n\r\nconst fetchTotalReferralCommissions = async (address) => {\r\n  const totalReferralCommissions = await referralContract.methods.totalReferralCommissions(address).call()\r\n  return totalReferralCommissions\r\n}\r\n\r\nexport default fetchTotalReferralCommissions\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/pools/fetchPools.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/state/farms/fetchFarms.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useApprove.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useHarvest.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useFarmsWithBalance.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/ApyButton.tsx",["532"],"import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CalculateIcon, IconButton, useModal } from '@pancakeswap-libs/uikit'\r\nimport { Address } from 'config/constants/types'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      quoteTokenAdresses={quoteTokenAdresses}\r\n      quoteTokenSymbol={quoteTokenSymbol}\r\n      tokenAddresses={tokenAddresses}\r\n      cakePrice={cakePrice}\r\n      apy={apy}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\r\n      <CalculateIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/CardActionsContainer.tsx",["533"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          GOB\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/DigitTimer.tsx",["534"],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Presale/components/BuyModal.tsx",["535"],"import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface BuyModalProps {\r\n    max: BigNumber\r\n    tokenName?: string\r\n    onConfirm: (amount: string) => void\r\n    onDismiss?: () => void\r\n    tokensUnclaimed?: BigNumber\r\n    tokenBalance?: BigNumber\r\n    tokensLeft?: BigNumber\r\n}\r\n\r\nconst BuyModal: React.FC<BuyModalProps> = ({ max, tokenName = \"\", onConfirm, onDismiss, tokensUnclaimed, tokenBalance, tokensLeft }) => {\r\n    const [val, setVal] = useState('')\r\n    const [pendingTx, setPendingTx] = useState(false)\r\n    const TranslateString = useI18n()\r\n    const fullBalance = useMemo(() => {\r\n        return getFullDisplayBalance(max)\r\n    }, [max])\r\n\r\n    const handleChange = useCallback(\r\n        (e: React.FormEvent<HTMLInputElement>) => {\r\n            setVal(e.currentTarget.value)\r\n        },\r\n        [setVal],\r\n    )\r\n\r\n    const handleSelectMax = useCallback(() => {\r\n        setVal(fullBalance)\r\n    }, [fullBalance, setVal])\r\n\r\n    const renderErrorMessage = () => {\r\n        let error = null;\r\n        if (parseInt(val) > getBalanceNumber(tokensLeft)) {\r\n            error = \"Not enough GOB left for sale!\"\r\n        }\r\n        return error;\r\n    }\r\n\r\n    return (\r\n        <Modal title={`${TranslateString(316, 'Buy')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n            <div style={{ color: '#fff' }}>{renderErrorMessage()}</div>\r\n            <TokenInput\r\n                value={val}\r\n                onSelectMax={handleSelectMax}\r\n                onChange={handleChange}\r\n                max={fullBalance}\r\n                symbol={tokenName}\r\n            />\r\n            <ModalActions>\r\n                {/* tochange */}\r\n                <Button variant=\"secondary\" onClick={onDismiss}>\r\n                    {TranslateString(462, 'Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={parseInt(val) > getBalanceNumber(tokensLeft) || pendingTx}\r\n                    onClick={async () => {\r\n                        setPendingTx(true)\r\n                        await onConfirm(val)\r\n                        setPendingTx(false)\r\n                        onDismiss()\r\n                    }}\r\n                >\r\n                    {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n                </Button>\r\n            </ModalActions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BuyModal\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/CardHeading.tsx",["536"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  risk?: number\r\n  depositFee?: number\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  risk,\r\n  farmImage,\r\n  tokenSymbol,\r\n  depositFee,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {depositFee === 0 ? <NoFeeTag /> : null}\r\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\r\n          {/* <RiskTag risk={risk} /> */}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/DetailsSection.tsx",["537"],"import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { Address } from 'config/constants/types'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\n\r\nexport interface ExpandableSectionProps {\r\n  isTokenOnly?: boolean\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  isTokenOnly,\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const tokenAddress = getCakeAddress()\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={\r\n          isTokenOnly ?\r\n          `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${tokenAddress}` // toChange\r\n            :\r\n          `https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`\r\n        }>\r\n          {lpLabel}\r\n        </StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/presale.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/referrals.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/pools.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/farms.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/contracts.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useContract.ts",["538"],"import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getPresaleAddress } from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport lottery from 'config/abi/lottery.json'\r\nimport lotteryTicket from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport presale from 'config/abi/presale.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = ifo as unknown as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = erc20 as unknown as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getCakeAddress())\r\n}\r\n\r\nexport const useRabbitMintingFarm = (address: string) => {\r\n  const rabbitMintingFarmAbi = rabbitmintingfarm as unknown as AbiItem\r\n  return useContract(rabbitMintingFarmAbi, address)\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = pancakeRabbits as unknown as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const abi = lottery as unknown as AbiItem\r\n  return useContract(abi, getLotteryAddress())\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const abi = lotteryTicket as unknown as AbiItem\r\n  return useContract(abi, getLotteryTicketAddress())\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = masterChef as unknown as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const usePresale = () => {\r\n  const abi = presale as unknown as AbiItem\r\n  return useContract(abi, getPresaleAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = rawAbi as unknown as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport default useContract\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/erc20.ts",["539"],"import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/usePresale.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx",["540"],"import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\nimport { Address } from 'config/constants/types'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  quoteTokenAdresses?: Address\r\n  quoteTokenSymbol?: string\r\n  tokenAddresses: Address\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  quoteTokenSymbol,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  apy,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(999, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(999, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(999, 'GOB per $1000')}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          999,\r\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\r\n          {TranslateString(999, 'Get')} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/HarvestAction.tsx",["541"],"import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport useStake from '../../../../hooks/useStake'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <BalanceAndCompound>\r\n        {pid === 12 ?\r\n          <Button\r\n            disabled={rawEarningsBalance === 0 || pendingTx}\r\n            size='sm'\r\n            variant='secondary'\r\n            marginBottom='15px'\r\n            onClick={async () => {\r\n              setPendingTx(true)\r\n              await onStake(rawEarningsBalance.toString())\r\n              setPendingTx(false)\r\n            }}\r\n          >\r\n            {TranslateString(999, 'Compound')}\r\n          </Button>\r\n          : null}\r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n        >\r\n          {TranslateString(999, 'Harvest')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/FarmCard/StakeAction.tsx",["542"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid, depositFeeBP}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />)\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake')}</Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ExpandableSectionButton/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/getLiquidityUrlPathParts.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useStake.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Tags.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/WithdrawModal.tsx",["543"],"import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/views/Farms/components/DepositModal.tsx",["544"],"import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/config/constants/ifo.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/callHelpers.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useWeb3.ts",["545"],"import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/TokenInput/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/compoundApyHelpers.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx",["546"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ModalActions/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/hooks/useUnstake.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/TokenInput/TokenInput.tsx",["547"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      {\r\n        depositFeeBP > 0 ?\r\n          <StyledMaxText>\r\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\r\n          </StyledMaxText>\r\n          :\r\n          null\r\n      }\r\n\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/ModalActions/ModalActions.tsx",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/utils/referrals.ts",["548"],"/* eslint @typescript-eslint/no-var-requires: \"off\" */\r\nimport { AbiItem } from 'web3-utils'\r\nimport referralABI from 'config/abi/referral.json'\r\nimport { getReferralAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst CryptoJS = require('crypto-js')\r\n\r\nconst web3 = getWeb3()\r\nconst referralContract = new web3.eth.Contract(referralABI as unknown as AbiItem, getReferralAddress())\r\nconst secretKey = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_SECRET_KEY)\r\nconst hexPrefix = '0x'\r\nconst zeroAddress = `${hexPrefix}0000000000000000000000000000000000000000`\r\nconst martianRefCodeCookieKey = 'martian_finance_referral_code'\r\n\r\nexport const generateReferralLink = (account) => {\r\n  const simplifieldAccount = account.replace(hexPrefix, '')\r\n  const code = CryptoJS.Rabbit.encrypt(simplifieldAccount, secretKey, {\r\n    mode: CryptoJS.mode.ECB,\r\n    padding: CryptoJS.pad.NoPadding,\r\n  })\r\n    .toString()\r\n    .replace('==', '')\r\n\r\n  return `${process.env.REACT_APP_BASE_URL}?ref=${code}`\r\n}\r\n\r\nexport function getReferralCookie() {\r\n  const martianCookie = document.cookie.split('; ').find((row) => row.startsWith(`{martianRefCodeCookieKey}=`))\r\n\r\n  if (typeof martianCookie === 'undefined') {\r\n    return ''\r\n  }\r\n\r\n  return martianCookie.split('=')[1]\r\n}\r\n\r\nexport async function setReferralCode(referralCode, account) {\r\n  const searchParams = new URLSearchParams(referralCode)\r\n  const isRefNotExists = searchParams.get('ref') === null\r\n  const isAccountNotExist = account === null\r\n  if (isRefNotExists || isAccountNotExist) {\r\n    return false\r\n  }\r\n\r\n  const hasExistingCookie = getReferralCookie()\r\n  const referrerAddress = await referralContract.methods.getReferrer(account).call()\r\n  const hasExistingReferrer = referrerAddress !== zeroAddress\r\n  if (hasExistingCookie || hasExistingReferrer) {\r\n    return false\r\n  }\r\n\r\n  // using searchParams.get('ref') functions removes some characters from the url\r\n  const cleanRefferalCode = `${referralCode.replace('?ref=', '')}==`\r\n  const decryptedReferrereAddress = CryptoJS.Rabbit.decrypt(cleanRefferalCode, secretKey, {\r\n    mode: CryptoJS.mode.ECB,\r\n    padding: CryptoJS.pad.NoPadding,\r\n  }).toString(CryptoJS.enc.Utf8)\r\n  const referrereAddress = `${hexPrefix}${decryptedReferrereAddress}`\r\n\r\n  if (account === referrereAddress) {\r\n    return false\r\n  }\r\n\r\n  if (document.cookie.indexOf(martianRefCodeCookieKey) === -1) {\r\n    document.cookie = `${martianRefCodeCookieKey}=${cleanRefferalCode}`\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport function getReferralCode() {\r\n  const cookieValue = getReferralCookie()\r\n  if (!cookieValue) {\r\n    return zeroAddress\r\n  }\r\n\r\n  const decryptedReferrereAddress = CryptoJS.Rabbit.decrypt(cookieValue, secretKey, {\r\n    mode: CryptoJS.mode.ECB,\r\n    padding: CryptoJS.pad.NoPadding,\r\n  }).toString(CryptoJS.enc.Utf8)\r\n\r\n  const referrereAddress = `${hexPrefix}${decryptedReferrereAddress}`\r\n\r\n  document.cookie = `${martianRefCodeCookieKey}=; expires=Thu, 01 Jan 1970 00:00:00 UTC;`\r\n\r\n  return referrereAddress\r\n}\r\n\r\nexport default generateReferralLink\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Input/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Spacer/index.ts",[],"/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Input/Input.tsx",["549"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","/Users/samuelchng/spartandefi/spartan-frontendfarms/src/components/Spacer/Spacer.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"550","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"551","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"552","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"553","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"554","line":8,"column":82},{"ruleId":null,"fatal":true,"severity":2,"message":"555","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"556","line":16,"column":5},{"ruleId":null,"fatal":true,"severity":2,"message":"557","line":95,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"558","line":144,"column":31},{"ruleId":null,"fatal":true,"severity":2,"message":"559","line":21,"column":5},{"ruleId":null,"fatal":true,"severity":2,"message":"560","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"561","line":20,"column":65},{"ruleId":null,"fatal":true,"severity":2,"message":"562","line":10,"column":52},{"ruleId":null,"fatal":true,"severity":2,"message":"563","line":8,"column":52},{"ruleId":null,"fatal":true,"severity":2,"message":"564","line":7,"column":60},{"ruleId":null,"fatal":true,"severity":2,"message":"565","line":7,"column":60},{"ruleId":null,"fatal":true,"severity":2,"message":"566","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"567","line":24,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"568","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"569","line":11,"column":5},{"ruleId":null,"fatal":true,"severity":2,"message":"570","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"571","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"572","line":35,"column":21},{"ruleId":null,"fatal":true,"severity":2,"message":"573","line":9,"column":49},{"ruleId":null,"fatal":true,"severity":2,"message":"574","line":12,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"575","line":12,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"576","line":14,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"577","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"578","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"579","line":9,"column":82},{"ruleId":null,"fatal":true,"severity":2,"message":"580","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"581","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"582","line":10,"column":60},{"ruleId":null,"fatal":true,"severity":2,"message":"583","line":6,"column":3},"Parsing error: Only declares and type imports are allowed inside declare module.\n\n\u001b[0m \u001b[90m  5 |\u001b[39m declare module \u001b[32m'styled-components'\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   \u001b[90m/* eslint-disable @typescript-eslint/no-empty-interface */\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mDefaultTheme\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mPancakeTheme\u001b[39m {}\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mGlobalStyle\u001b[39m \u001b[33m=\u001b[39m createGlobalStyle\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mLangType\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   code\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m   language\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mLanguageState\u001b[39m {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mIfo\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   id\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   isActive\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   address\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   name\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   subTitle\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mCall\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   address\u001b[33m:\u001b[39m string \u001b[90m// Address of the contract\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   name\u001b[33m:\u001b[39m string \u001b[90m// Function name on the contract (exemple: balanceOf)\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   params\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any[] \u001b[90m// Function params\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  6 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mRPC_URL\u001b[39m \u001b[33m=\u001b[39m getRpcUrl()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m \u001b[36mconst\u001b[39m httpProvider \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m\u001b[33m.\u001b[39mproviders\u001b[33m.\u001b[39m\u001b[33mHttpProvider\u001b[39m(\u001b[33mRPC_URL\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m } \u001b[36mas\u001b[39m \u001b[33mHttpProviderOptions\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m/**\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[90m * Provides a web3 instance using our own private provider httpProver\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTranslationState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 |\u001b[39m   translations\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m   setTranslations\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDispatch\u001b[39m\u001b[33m<\u001b[39m\u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSetStateAction\u001b[39m\u001b[33m<\u001b[39m\u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>>>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m \u001b[36mconst\u001b[39m defaultTranslationState\u001b[33m:\u001b[39m \u001b[33mTranslationState\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 14 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBuyCardProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m     account\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m     ethereum\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m provider\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m     allowance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m     busdBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m     tokensUnclaimed\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 93 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mFarmCardProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 94 |\u001b[39m   farm\u001b[33m:\u001b[39m \u001b[33mFarmWithStakedValue\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 95 |\u001b[39m   removed\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 96 |\u001b[39m   cakePrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 97 |\u001b[39m   bnbPrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 98 |\u001b[39m   ethereum\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m provider\u001b[0m","Parsing error: Missing semicolon.\n\n\u001b[0m \u001b[90m 142 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 143 |\u001b[39m   \u001b[36mconst\u001b[39m handleAddToken \u001b[33m=\u001b[39m useCallback(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 144 |\u001b[39m     \u001b[36mconst\u001b[39m windowAsAny \u001b[33m=\u001b[39m window \u001b[36mas\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 145 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mtypeof\u001b[39m windowAsAny\u001b[33m.\u001b[39methereum \u001b[33m===\u001b[39m \u001b[32m'undefined'\u001b[39m \u001b[33m&&\u001b[39m \u001b[33m!\u001b[39mwindowAsAny\u001b[33m.\u001b[39methereum\u001b[33m.\u001b[39misMetaMask) {\u001b[0m\n\u001b[0m \u001b[90m 146 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m'MetaMask is not installed!'\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 147 |\u001b[39m     }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 19 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBuyActionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m     busdBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m     tokensUnclaimed\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m     tokenBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m     tokensLeft\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 24 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mCardValueProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   value\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   decimals\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   fontSize\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   prefix\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[36mconst\u001b[39m nonMasterPools \u001b[33m=\u001b[39m poolsConfig\u001b[33m.\u001b[39mfilter((p) \u001b[33m=>\u001b[39m p\u001b[33m.\u001b[39msousId \u001b[33m!==\u001b[39m \u001b[35m0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m \u001b[36mconst\u001b[39m masterChefContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m((masterChefABI \u001b[36mas\u001b[39m unknown) \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getMasterChefAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m fetchPoolsAllowance \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m (account) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m   \u001b[36mconst\u001b[39m calls \u001b[33m=\u001b[39m nonBnbPools\u001b[33m.\u001b[39mmap((p) \u001b[33m=>\u001b[39m ({\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  8 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m busdContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(busdABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getBusdAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[36mconst\u001b[39m cakeContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(busdABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getCakeAddress())\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mconst\u001b[39m presaleContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(presaleABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getPresaleAddress())\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  6 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m \u001b[36mconst\u001b[39m busdContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(busdABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getBusdAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m fetchTokensLeft \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m     \u001b[36mconst\u001b[39m busdCollected \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m busdContract\u001b[33m.\u001b[39mmethods\u001b[33m.\u001b[39mbalanceOf(getPresaleAddress())\u001b[33m.\u001b[39mcall()\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  5 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m \u001b[36mconst\u001b[39m referralContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(referralABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getReferralAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m fetchTotalReferrals \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m (address) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   \u001b[36mconst\u001b[39m referralsCount \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m referralContract\u001b[33m.\u001b[39mmethods\u001b[33m.\u001b[39mreferralsCount(address)\u001b[33m.\u001b[39mcall()\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  5 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m \u001b[36mconst\u001b[39m referralContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(referralABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getReferralAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m fetchTotalReferralCommissions \u001b[33m=\u001b[39m \u001b[36masync\u001b[39m (address) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   \u001b[36mconst\u001b[39m totalReferralCommissions \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m referralContract\u001b[33m.\u001b[39mmethods\u001b[33m.\u001b[39mtotalReferralCommissions(address)\u001b[33m.\u001b[39mcall()\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mApyButtonProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   lpLabel\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   cakePrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   apy\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   quoteTokenAdresses\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mAddress\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   quoteTokenSymbol\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 22 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 |\u001b[39m   farm\u001b[33m:\u001b[39m \u001b[33mFarmWithStakedValue\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m   ethereum\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m provider\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 |\u001b[39m   account\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 26 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 27 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mDigitTimerProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   heading\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   text\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   timeStamp\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mBuyModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m     max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m     onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m     onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m     tokensUnclaimed\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mExpandableSectionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m   lpLabel\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m   multiplier\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   risk\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   depositFee\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   farmImage\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mExpandableSectionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   isTokenOnly\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   bscScanAddress\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   removed\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   totalValueFormated\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   lpLabel\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Missing semicolon.\n\n\u001b[0m \u001b[90m 33 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m useIfoContract \u001b[33m=\u001b[39m (address\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m   \u001b[36mconst\u001b[39m ifoAbi \u001b[33m=\u001b[39m ifo \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 |\u001b[39m   \u001b[36mreturn\u001b[39m useContract(ifoAbi\u001b[33m,\u001b[39m address)\u001b[0m\n\u001b[0m \u001b[90m 37 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  7 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m getContract \u001b[33m=\u001b[39m (provider\u001b[33m:\u001b[39m \u001b[33mProviderType\u001b[39m\u001b[33m,\u001b[39m address\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m(provider)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   \u001b[36mconst\u001b[39m contract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m((erc20 \u001b[36mas\u001b[39m unknown) \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m address)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   \u001b[36mreturn\u001b[39m contract\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mApyCalculatorModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 |\u001b[39m   lpLabel\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   cakePrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   apy\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   quoteTokenAdresses\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mAddress\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   earnings\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 |\u001b[39m   pid\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mBalanceAndCompound\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   stakedBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   tokenBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   pid\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m   depositFeeBP\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mWithdrawModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mDepositModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m   onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m   tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m   depositFeeBP\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  7 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mRPC_URL\u001b[39m \u001b[33m=\u001b[39m getRpcUrl()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m httpProvider \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m\u001b[33m.\u001b[39mproviders\u001b[33m.\u001b[39m\u001b[33mHttpProvider\u001b[39m(\u001b[33mRPC_URL\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m } \u001b[36mas\u001b[39m \u001b[33mHttpProviderOptions\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[90m/**\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[90m * Provides a web3 instance using the provider provided by useWallet\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mExpandableSectionButtonProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   onClick\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   expanded\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 |\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mTokenInputProps\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m   max\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m   symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m   onSelectMax\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m   depositFeeBP\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m }\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  8 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m \u001b[36mconst\u001b[39m referralContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m(referralABI \u001b[36mas\u001b[39m unknown \u001b[36mas\u001b[39m \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getReferralAddress())\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m \u001b[36mconst\u001b[39m secretKey \u001b[33m=\u001b[39m \u001b[33mCryptoJS\u001b[39m\u001b[33m.\u001b[39menc\u001b[33m.\u001b[39m\u001b[33mUtf8\u001b[39m\u001b[33m.\u001b[39mparse(process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mREACT_APP_SECRET_KEY\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mconst\u001b[39m hexPrefix \u001b[33m=\u001b[39m \u001b[32m'0x'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[36mconst\u001b[39m zeroAddress \u001b[33m=\u001b[39m \u001b[32m`${hexPrefix}0000000000000000000000000000000000000000`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36minterface\u001b[39m \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 |\u001b[39m   endAdornment\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m   onChange\u001b[33m:\u001b[39m (e\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFormEvent\u001b[39m\u001b[33m<\u001b[39m\u001b[33mHTMLInputElement\u001b[39m\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 |\u001b[39m   placeholder\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m   startAdornment\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 |\u001b[39m   value\u001b[33m:\u001b[39m string\u001b[0m"]